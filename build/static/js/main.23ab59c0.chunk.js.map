{"version":3,"sources":["QuikCardLogo.png","QuikCardLogoText.png","constants.js","Signin.js","AddCard.js","Card.js","CardList.js","NavBar.js","SignedIn.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","appConfig","AppConfig","Container","styled","div","_templateObject","Signin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userSession","UserSession","state","isModalOpen","e","preventDefault","redirectToSignIn","_this2","react_default","a","createElement","Modal","size","isOpen","onClose","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","setState","stop","Button","variant","onClick","_callee2","_context2","Stack","spacing","Heading","Box","shadow","borderWidth","bg","color","rounded","style","marginBottom","className","_hover","backgroundColor","id","_callee3","_context3","sent","signIn","bind","Component","AddCard_templateObject","StyledForm","form","_templateObject2","AddCard","props","handleChange","card","_objectSpread","defineProperty","target","name","value","handleSubmit","_ref","prevCards","newCard","cards","blacklist","indexOf","cardNumber","toast","toastType","count","concat","toConsumableArray","saveCards","history","push","_x","apply","arguments","makeToast","desc","type","closeOnClick","cardType","expDate","balance","security","notes","AddCard_Container","react_toastify","width","Text","paddingTop","fontSize","onSubmit","FormControl","isRequired","FormLabel","htmlFor","Input","onChange","label","InputGroup","InputAddon","children","Textarea","React","Card","openModal","view","recipient","_this$props","sendCard","Flex","justify","height","padding","borderRadius","background","marginTop","variantColor","mr","Image","objectFit","src","Logo","alt","textAlign","_callee4","_context4","_callee5","_context5","_callee6","_context6","CardList_templateObject","CardList","currentCard","msg","prevBlacklist","cardIdx","console","log","from","email","personalizations","to","dynamic_template_data","username","me","template_id","axios","post","JSON","stringify","splice","_x2","_x3","CardList_Container","align","map","src_Card","undefined","length","NavBar","_useState","useState","_useState2","slicedToArray","openClose","btnRef","useRef","route","href","ref","Drawer","placement","finalFocusRef","paddingRight","border","signOut","SignedIn","savingMe","savingCards","savingData","loadMe","assertThisInitialized","saveMe","loadCards","getFile","decrypt","then","content","_me","parse","loadUserData","profile","_this3","_ref2","_cards","_this4","putFile","encrypt","finally","_this5","signUserOut","window","location","_this6","Route","path","render","routeProps","src_NavBar","assign","Switch","AddCard_AddCard","src_CardList","App","session","isUserSignedIn","isSignInPending","handlePendingSignIn","userData","Error","src_SignedIn","Signin_Signin","ReactDOM","BrowserRouter","ThemeProvider","CSSReset","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.23ab59c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/QuikCardLogo.e432cbf8.png\";","module.exports = __webpack_public_path__ + \"static/media/QuikCardLogoText.e4b0692e.png\";","import { AppConfig } from 'blockstack'\r\n\r\nexport const appConfig = new AppConfig(['store_write', 'publish_data'])\r\nexport const ME_FILENAME = 'me.json'\r\nexport const CARDS_FILENAME = 'cards.json'","import React, { Component } from 'react';\nimport { UserSession } from 'blockstack'\nimport { appConfig } from './constants'\nimport { Heading, Stack, Button, Box, Modal, ModalBody, ModalContent, ModalOverlay, ModalHeader, ModalCloseButton, ModalFooter } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 60vw;\n  display: flex;\n  margin: 2vh auto;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport default class Signin extends Component {\n\n  constructor() {\n    super()\n    this.userSession = new UserSession({ appConfig })\n    this.state = {\n      isModalOpen: false\n    }\n  }\n\n  signIn(e) {\n    e.preventDefault()\n    this.userSession.redirectToSignIn()\n  }\n\n  render() {\n    return (\n      <Container>\n        <Modal size='xl' isOpen={this.state.isModalOpen} onClose={async() => this.setState({isModalOpen: false})}>\n          <ModalOverlay />\n          <ModalContent>\n          <ModalHeader>Terms Of Service</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n              There are a few things to note before you use QuikCard. <br/> <br/>\n              - QuikCard does not confirm if funds are on cards, or if cards are valid. <br/>\n              - QuikCard uses transactional emails that are auto-deleted to send gift cards. <br/>\n              - If you send a card, tell the recipient to check their spam inbox if they cannot find it. <br/>\n              - When viewing your cards, clicking the info button will display sensitive card info on your screen, keep this in mind. <br/>\n              - QuikCard shouldn't be used to distribute/sell gift cards. <br/>\n              - Once you send a card, you cannot add it back to your account. <br/>\n              - All of your card data is secured within BlockStack's Gaia storage, and not stored by QuikCard. <br/>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\"  onClick={async() => this.setState({isModalOpen: false})}>Close</Button>\n          </ModalFooter>\n          </ModalContent>\n        </Modal>\n        <Stack spacing={20}>\n          <Heading>Welcome to QuikCard!</Heading>\n          <Box p={10} shadow=\"md\" borderWidth=\"1px\" bg=\"#05386B\" color=\"#EDF5E1\" rounded=\"md\">\n            <Heading style={{marginBottom: '5vh'}} size=\"lg\">Please Read the TOS before continuing</Heading>\n            <p className=\"lead\">\n              <Button\n                bg=\"#379683\"\n                _hover={{ color: \"#379683\", backgroundColor: \"beige\" }}\n                id=\"signin-button\"\n                onClick={async() => await this.setState({isModalOpen: true})}\n              >\n                TOS\n              </Button>\n            </p>\n          </Box>\n          <Box p={5} shadow=\"md\" borderWidth=\"1px\" bg=\"#05386B\" color=\"#EDF5E1\" rounded=\"md\">\n            <Heading style={{marginBottom: '5vh'}} size=\"lg\">Authenticate</Heading>\n            <p className=\"lead\">\n              <Button\n                bg=\"#379683\"\n                _hover={{ color: \"#379683\", backgroundColor: \"beige\" }}\n                id=\"signin-button\"\n                onClick={ this.signIn.bind(this) }\n              >\n                Sign In with Blockstack\n              </Button>\n            </p>\n          </Box>\n        </Stack>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\r\nimport {\r\n    Stack,\r\n    Input,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n    InputLeftAddon,\r\n    Textarea,\r\n    InputGroup,\r\n    Heading,\r\n    Text\r\n} from '@chakra-ui/core';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 70vw;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 5vh auto;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  background-color: #8EE4AF;\r\n  padding: 5vh 4vw 5vh 4vw;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n    width: 100%;\r\n    padding: 2.5vh 0;\r\n    text-align: left;\r\n`;\r\n\r\nexport default class AddCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            card: {\r\n                cardType: '',\r\n                cardNumber: '',\r\n                expDate: '',\r\n                balance: '',\r\n                security: '',\r\n                notes: ''\r\n            },\r\n            toast: '',\r\n            toastType: ''\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        return this.setState({ card: {...this.state.card, [e.target.name]: e.target.value }})\r\n    }\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if(this.props.cards.blacklist.indexOf(this.state.card.cardNumber) !== -1) {\r\n            await this.setState({toast: 'This card has already been sent', toastType: 'warning'})\r\n            return\r\n        }\r\n        let prevCards = this.props.cards\r\n        let newCard = this.state.card\r\n        prevCards = {\r\n            count: prevCards.count+1,\r\n            cards: [\r\n                ...prevCards.cards,\r\n                newCard\r\n            ],\r\n            blacklist: [\r\n                ...prevCards.blacklist\r\n            ]\r\n        }\r\n        await this.props.saveCards(prevCards);\r\n        this.props.history.push('/cards')\r\n    }\r\n\r\n    makeToast = (desc, type) => {\r\n        return toast(desc, {type: type, closeOnClick: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                {this.state.toast && this.state.toastType ? (() => {\r\n                    this.makeToast(this.state.toast, this.state.toastType)\r\n                    return <ToastContainer />\r\n                })()\r\n                : null}\r\n                <Heading size='lg' style={{width: '100%'}}>Add a new card</Heading>\r\n                <Text style={{width: '100%', paddingTop: '10px'}} fontSize=\"sm\">*Since card data can differ, only Card Type, Number, Expiration Date, and Balance are required.</Text>\r\n                <StyledForm onSubmit={this.handleSubmit}>\r\n                    <Stack spacing={5}>\r\n                        <FormControl isRequired>\r\n                            <FormLabel htmlFor=\"cardType\">Card Type</FormLabel>\r\n                            <Input onChange={this.handleChange} value={this.state.card.cardType} type='text' name='cardType' label='Card Type' />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel htmlFor=\"cardNumber\">Card Number</FormLabel>\r\n                            <Input onChange={this.handleChange} value={this.state.card.cardNumber} type='password' name='cardNumber' label='Card Number' />  \r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel htmlFor=\"expDate\">Expiration Date</FormLabel>\r\n                            <Input onChange={this.handleChange} value={this.state.card.expDate} type='text' name='expDate' label='Expiration Date' />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel htmlFor=\"balance\">Balance</FormLabel>\r\n                            <InputGroup>\r\n                                <InputLeftAddon children={'$'} />\r\n                                <Input onChange={this.handleChange} value={this.state.card.balance} type='text' name='balance' label='Balance' />\r\n                            </InputGroup>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel htmlFor=\"security\">CVV/Security Code</FormLabel>\r\n                            <Input onChange={this.handleChange} value={this.state.card.security} type='password' name='security' label='CVV/Security Code' />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel htmlFor=\"notes\">Other Notes</FormLabel>\r\n                            <Textarea onChange={this.handleChange} value={this.state.card.notes} type='text' name='notes' label='Other Notes' /> \r\n                        </FormControl>\r\n                        <p className=\"lead\">\r\n                            <Button\r\n                                bg=\"#379683\"\r\n                                _hover={{ color: \"#379683\", backgroundColor: \"beige\" }}\r\n                                id=\"signin-button\"\r\n                                onClick={ this.handleSubmit }\r\n                            >\r\n                                Add New Card\r\n                            </Button>\r\n                        </p>\r\n                    </Stack>\r\n                </StyledForm>         \r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Flex,\r\n    Stack,\r\n    Box,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    FormControl,\r\n    FormLabel,\r\n    Input\r\n} from '@chakra-ui/core';\r\nimport Logo from './QuikCardLogo.png';\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            view: 'buttons',\r\n            recipient: '',\r\n            isModalOpen: false\r\n        }\r\n    }\r\n\r\n    openModal = async card => {\r\n        await this.setState({isModalOpen: true})\r\n    }\r\n\r\n    handleChange = e => {\r\n        return this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const {card, sendCard} = this.props\r\n        return (\r\n            <Flex \r\n                justify='space-between' \r\n                wrap='wrap' \r\n                style={{\r\n                    height: this.state.view === \"buttons\" ? '35vh' : '45vh', \r\n                    padding: '4%', \r\n                    borderRadius: '10px',\r\n                    background: 'linear-gradient(#8EE4AF, #379683)',\r\n                    width: '100%',\r\n                    marginTop: '4vh',\r\n                    marginBottom: '4vh'\r\n                }}\r\n                >\r\n                <Modal isOpen={this.state.isModalOpen} onClose={async() => this.setState({isModalOpen: false})}>\r\n                    <ModalOverlay />\r\n                    <ModalContent>\r\n                    <ModalHeader>Confirm Action</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        When you click 'Send Card', SendGrid will send a transactional\r\n                        email to the recipient, no data is collected regarding this transaction.\r\n                        You will not be able to re-add this card to your account again.\r\n                        <FormControl style={{marginTop: '2vh'}} isRequired>\r\n                            <FormLabel htmlFor=\"recipient\">Recipient Email</FormLabel>\r\n                            <Input onChange={this.handleChange} value={this.state.recipient} type='email' name='recipient' label='Recipient Email' />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n                    \r\n                    <ModalFooter>\r\n                        <Button variantColor=\"blue\" mr={3} onClick={(e) => sendCard(e, card, this.state.recipient)}>\r\n                            Send Card\r\n                        </Button>\r\n                        <Button variant=\"ghost\"  onClick={async() => this.setState({isModalOpen: false})}>Close</Button>\r\n                    </ModalFooter>\r\n                    </ModalContent>\r\n                </Modal>\r\n                <Stack spacing={10}>\r\n                    <Image\r\n                        size=\"50px\"\r\n                        objectFit=\"cover\"\r\n                        style={{borderRadius: '10px'}}\r\n                        src={Logo}\r\n                        alt=\"card-logo\"\r\n                    />\r\n                    <div>\r\n                        <Heading size='sm' style={{textAlign: 'left'}}>{'Card Name'}</Heading>\r\n                        <Heading size='lg' style={{textAlign: 'center'}}>{card.cardType}</Heading>\r\n                    </div>\r\n                </Stack>\r\n                {this.state.view === 'buttons' ? \r\n                    <Stack spacing={5}>\r\n                        <Button\r\n                            bg=\"#05386B\"\r\n                            color=\"white\"\r\n                            _hover={{ color: \"#379683\", backgroundColor: \"beige\" }}\r\n                            id=\"signin-button\"\r\n                            onClick={async() => {\r\n                                await this.setState({view: 'info'}) \r\n                            }}\r\n                        > Card Info </Button>\r\n                        <Button\r\n                            bg=\"#05386B\"\r\n                            color=\"white\"\r\n                            _hover={{ color: \"#379683\", backgroundColor: \"beige\" }}\r\n                            id=\"signin-button\"\r\n                            onClick={async() => {\r\n                                this.openModal(card)\r\n                            }}\r\n                        > Send Card </Button>\r\n                    </Stack>\r\n                    : \r\n                    <Stack spacing={3}>\r\n                        <Button\r\n                            bg=\"#05386B\"\r\n                            color=\"white\"\r\n                            _hover={{ color: \"#379683\", backgroundColor: \"beige\" }}\r\n                            id=\"signin-button\"\r\n                            size=\"sm\"\r\n                            onClick={async() => await this.setState({view: 'buttons'}) }\r\n                        > Return </Button>\r\n                        <Text color=\"white\">Card Number - {card.cardNumber}</Text>\r\n                        <Text color=\"white\">Expiration Date - {card.expDate}</Text>\r\n                        <Text color=\"white\">CVV/Security - {card.security}</Text>\r\n                        <Text color=\"white\">Details/Notes - {card.notes}</Text>\r\n                    </Stack>\r\n                }\r\n            </Flex>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Flex,\r\n    Stack,\r\n    Box,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    FormControl,\r\n    FormLabel,\r\n    Input\r\n} from '@chakra-ui/core';\r\nimport Card from './Card';\r\nimport axios from 'axios';\r\nimport Logo from './QuikCardLogo.png';\r\n\r\n\r\nconst Container = styled.div`\r\n    width: 60vw;\r\n    margin: 5vh auto;\r\n    min-height: 100vh;\r\n`;\r\n\r\nclass CardList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    sendCard = async (e, currentCard, recipient) => {\r\n        console.log(currentCard, recipient)\r\n        const msg = {\r\n            \"from\":{\r\n                \"email\":\"from_email@example.com\"\r\n             },\r\n            \"personalizations\": [\r\n                {\r\n                    \"to\": [\r\n                        {\"email\": recipient}\r\n                    ],\r\n                    \"dynamic_template_data\":{\r\n                        \"username\": this.props.me.name,\r\n                        \"cardType\": currentCard.cardType,\r\n                        \"cardNumber\": currentCard.cardNumber,\r\n                        \"expDate\": currentCard.expDate,\r\n                        \"security\": currentCard.security,\r\n                        \"balance\": currentCard.balance,\r\n                        \"notes\": currentCard.notes\r\n                    }\r\n                }\r\n            ],\r\n            \"template_id\":\"d-622b2556bda745e0afb4437667771510\"\r\n          };\r\n          axios.post('https://quikcard.herokuapp.com/email', JSON.stringify(msg));\r\n          await this.setState({isModalOpen: false})\r\n          let prevBlacklist = this.props.cards.blacklist\r\n          let cardIdx = this.props.cards.cards.indexOf(currentCard)\r\n          let prevCards = this.props.cards.cards\r\n          prevCards.splice(cardIdx, 1)\r\n          await this.props.saveCards({\r\n            count: this.props.cards.count-1,\r\n            cards: prevCards,\r\n            blacklist: [...prevBlacklist, currentCard.cardNumber]\r\n          })\r\n    }\r\n\r\n    render() {\r\n        let cards = this.props.cards.cards\r\n        return (\r\n            <Container>\r\n                <Flex wrap='wrap' align='space-between'>\r\n                    {cards ? cards.map(card => {\r\n                        return <Card sendCard={this.sendCard} card={card} />\r\n                    })\r\n                    :\r\n                    null\r\n                    }\r\n                </Flex>\r\n                {cards !== undefined ?\r\n                    cards.length === 0 ?\r\n                    <Flex justify='center'>\r\n                        <Stack spacing={10}>\r\n                            <Heading style={{textAlign: 'center'}}>You have no cards!</Heading>\r\n                            <Heading size='md'>Click on 'Navigation', and then 'Add New Card' to add a new card.</Heading>\r\n                        </Stack>\r\n                    </Flex>\r\n                : null : null}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CardList;","import React, {useState} from 'react';\r\nimport Logo from './QuikCardLogoText.png';\r\nimport './styles/style.css';\r\nimport {\r\n    Drawer,\r\n    DrawerBody,\r\n    DrawerFooter,\r\n    DrawerHeader,\r\n    DrawerOverlay,\r\n    DrawerContent,\r\n    Button,\r\n    Flex,\r\n    Stack\r\n} from \"@chakra-ui/core\";\r\n\r\nfunction NavBar(props) {\r\n    const [ isOpen, openClose ] = useState(false)\r\n    const btnRef = React.useRef();\r\n\r\n    const route = (e, route) => {\r\n        e.preventDefault()\r\n        props.history.push(route)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark navbar-static-top app-nav\">\r\n            <a className=\"navbar-brand\" href=\"https://blockstack.org\">\r\n                <img src={Logo} alt=\"\" />\r\n            </a>\r\n            <Button ref={btnRef} bg=\"#05386B\" color=\"white\" onClick={() => openClose(!isOpen)}>\r\n                Navigation\r\n            </Button>\r\n            <Drawer\r\n                isOpen={isOpen}\r\n                placement=\"right\"\r\n                onClose={() => openClose(!isOpen)}\r\n                finalFocusRef={btnRef}\r\n            >\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                <Flex justify=\"space-between\" align=\"center\" style={{paddingRight: '20px', marginBottom: '10vh'}}>\r\n                    <DrawerHeader>Navigation</DrawerHeader>\r\n                    <Button style={{width:'15%'}} variant=\"outline\" onClick={() => openClose(!isOpen)}>\r\n                        X\r\n                    </Button>\r\n                </Flex>\r\n                <DrawerBody>\r\n                    <Stack spacing={10}>\r\n                        <Button bg=\"#05386B\" _hover={{ color: \"black\", backgroundColor: 'white', border: '1px solid black' }} color=\"white\" onClick={(e) => route(e, '/cards')}>\r\n                            My Cards\r\n                        </Button>\r\n                        <Button bg=\"#05386B\" _hover={{ color: \"black\", backgroundColor: 'white', border: '1px solid black' }} color=\"white\" onClick={(e) => route(e, '/cards/new')}>\r\n                            Add New Card\r\n                        </Button>\r\n                    </Stack>\r\n                </DrawerBody>\r\n\r\n                <DrawerFooter>\r\n                    <Button _hover={{border: '1px solid black', color: 'black', backgroundColor: 'white'}} width=\"100%\" bg=\"#5CDB95\" variant=\"outline\" mr={3} onClick={(e) => props.signOut(e)}>\r\n                    Logout\r\n                    </Button>\r\n                </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { UserSession } from 'blockstack'\r\nimport { appConfig, ME_FILENAME, CARDS_FILENAME } from './constants'\r\nimport AddCard from './AddCard'\r\nimport CardList from './CardList'\r\nimport NavBar from './NavBar'\r\n\r\n\r\nclass SignedIn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.userSession = new UserSession({ appConfig })\r\n    this.state = {\r\n      me: {},\r\n      cards: {},\r\n      savingMe: false,\r\n      savingCards: false,\r\n      savingData: false,\r\n    }\r\n\r\n    this.loadMe = this.loadMe.bind(this)\r\n    this.saveMe = this.saveMe.bind(this)\r\n    this.saveCards = this.saveCards.bind(this)\r\n    this.signOut = this.signOut.bind(this)\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await this.loadMe()\r\n    await this.loadCards()\r\n  }\r\n\r\n  loadMe() {\r\n    const options = { decrypt: false }\r\n    this.userSession.getFile(ME_FILENAME, options)\r\n    .then(async (content) => {\r\n      if(content) {\r\n        const me = JSON.parse(content)\r\n        this.setState({me})\r\n      } else {\r\n        const me = this.userSession.loadUserData().profile\r\n        await this.setState({me})\r\n        await this.saveMe(me)\r\n      }\r\n    })\r\n  }\r\n\r\n  loadCards() {\r\n    const options = { decrypt: false }\r\n    this.userSession.getFile(CARDS_FILENAME, options)\r\n    .then(async (content) => {\r\n      if(content) {\r\n        const cards = JSON.parse(content)\r\n        console.log(cards)\r\n        this.setState({cards})\r\n      } else {\r\n        const cards = {\r\n            count: 0,\r\n            cards: [],\r\n            blacklist: []\r\n        }\r\n        await this.setState({cards})\r\n        await this.saveCards(cards)\r\n      }\r\n    })\r\n  }\r\n\r\n  saveMe(me) {\r\n    this.setState({me, savingMe: true})\r\n    const options = { encrypt: false }\r\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(me), options)\r\n    .finally(() => {\r\n      this.setState({savingMe: false})\r\n    })\r\n  }\r\n\r\n  saveCards(cards) {\r\n    this.setState({cards, savingCards: true})\r\n    const options = { encrypt: false }\r\n    this.userSession.putFile(CARDS_FILENAME, JSON.stringify(cards), options)\r\n    .finally(() => {\r\n      this.setState({savingCards: false})\r\n    })\r\n  }\r\n\r\n  signOut(e) {\r\n    e.preventDefault()\r\n    this.userSession.signUserOut()\r\n    window.location = '/'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SignedIn\">\r\n      <Route\r\n        path='/'\r\n        render={\r\n          routeProps => <NavBar\r\n          type=\"navigation\"\r\n          userSession={this.userSession}\r\n          signOut={this.signOut}\r\n          {...routeProps} />\r\n        }\r\n      />\r\n      <Switch>\r\n              <Route\r\n                path='/cards/new'\r\n                render={\r\n                  routeProps => <AddCard\r\n                  type=\"addcard\"\r\n                  userSession={this.userSession}\r\n                  saveCards={this.saveCards}\r\n                  cards={this.state.cards}\r\n                  signOut={this.signOut}\r\n                  {...routeProps} />\r\n                }\r\n              />\r\n              <Route\r\n                path='/cards'\r\n                render={\r\n                  routeProps => <CardList\r\n                  type=\"cardlist\"\r\n                  userSession={this.userSession}\r\n                  saveCards={this.saveCards}\r\n                  cards={this.state.cards}\r\n                  me={this.state.me}\r\n                  signOut={this.signOut}\r\n                  {...routeProps} />\r\n                }\r\n              />\r\n      </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignedIn","import React, { Component } from 'react';\nimport Signin from './Signin.js';\nimport SignedIn from './SignedIn.js';\nimport {\n  UserSession\n} from 'blockstack';\n\nexport default class App extends Component {\n\n  state = {\n    userSession : new UserSession()\n  }\n\n  componentWillMount() {\n    const session = this.state.userSession\n    if(!session.isUserSignedIn() && session.isSignInPending()) {\n      session.handlePendingSignIn()\n      .then((userData) => {\n        if(!userData.username) {\n          throw new Error('This app requires a username.')\n        }\n        window.location = `/cards`\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"site-wrapper\">\n        <div className=\"site-wrapper-inner\">\n          { !this.state.userSession.isUserSignedIn() ?\n            <Signin />\n            : <SignedIn />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App.js';\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\n\n// Require Sass file so webpack can build it\nimport 'bootstrap/dist/css/bootstrap.css';\nimport'./styles/style.css';\n\nReactDOM.render(<BrowserRouter><ThemeProvider><CSSReset /><App /></ThemeProvider></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}